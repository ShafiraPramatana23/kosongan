package com.fidilaundry.app.basearch.dbimport android.content.Contextimport androidx.room.Databaseimport androidx.room.Roomimport androidx.room.RoomDatabaseimport androidx.room.TypeConvertersimport com.fidilaundry.app.basearch.db.dao.*import com.fidilaundry.app.basearch.util.Convertersimport com.fidilaundry.app.basearch.util.DBConstants@Database(    entities = [RoomUserDataEntity::class],    version = 1,    exportSchema = false)@TypeConverters(Converters::class)abstract class PosgoDB : RoomDatabase() {    companion object {        /** useInMemory - used for mostly development */        fun create(context: Context, useInMemory: Boolean = false): PosgoDB {            val databaseBuilder = if (useInMemory) {                Room.inMemoryDatabaseBuilder(context, PosgoDB::class.java)            } else {                Room.databaseBuilder(context, PosgoDB::class.java, DBConstants.DB_NAME)            }            return databaseBuilder                .fallbackToDestructiveMigration()                .build()        }    }    abstract fun golBalanceDao(): GoldBalanceDao}